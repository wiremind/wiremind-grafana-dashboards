{
  "__inputs": [
    {
      "name": "DS_THANOS",
      "label": "Thanos",
      "description": "",
      "type": "datasource",
      "pluginId": "prometheus",
      "pluginName": "Prometheus"
    }
  ],
  "__elements": {},
  "__requires": [
    {
      "type": "grafana",
      "id": "grafana",
      "name": "Grafana",
      "version": "11.5.2"
    },
    {
      "type": "datasource",
      "id": "prometheus",
      "name": "Prometheus",
      "version": "1.0.0"
    },
    {
      "type": "panel",
      "id": "table",
      "name": "Table",
      "version": ""
    }
  ],
  "annotations": {
    "list": [
      {
        "builtIn": 1,
        "datasource": {
          "type": "prometheus",
          "uid": "${datasource}"
        },
        "enable": false,
        "hide": true,
        "iconColor": "rgba(0, 211, 255, 1)",
        "name": "Annotations & Alerts",
        "type": "dashboard"
      }
    ]
  },
  "description": "A dashboard to help with cost and utilisation",
  "editable": true,
  "fiscalYearStartMonth": 0,
  "graphTooltip": 0,
  "id": null,
  "links": [],
  "panels": [
    {
      "datasource": {
        "type": "prometheus",
        "uid": "${datasource}"
      },
      "fieldConfig": {
        "defaults": {
          "color": {
            "mode": "thresholds"
          },
          "custom": {
            "align": "auto",
            "cellOptions": {
              "type": "auto"
            },
            "filterable": true,
            "inspect": false
          },
          "decimals": 0,
          "mappings": [],
          "thresholds": {
            "mode": "absolute",
            "steps": [
              {
                "color": "green",
                "value": null
              }
            ]
          },
          "unit": "none"
        },
        "overrides": [
          {
            "matcher": {
              "id": "byName",
              "options": "namespace"
            },
            "properties": [
              {
                "id": "displayName",
                "value": "Namespace"
              },
              {
                "id": "links",
                "value": [
                  {
                    "targetBlank": false,
                    "title": "View namespace cost analysis",
                    "url": "d/at-cost-analysis-namespace/cost-analysis-by-namespace?&var-namespace=$__cell"
                  }
                ]
              },
              {
                "id": "custom.minWidth",
                "value": 180
              }
            ]
          },
          {
            "matcher": {
              "id": "byName",
              "options": "Value #cpu_requested"
            },
            "properties": [
              {
                "id": "unit",
                "value": "short"
              },
              {
                "id": "decimals",
                "value": 1
              }
            ]
          },
          {
            "matcher": {
              "id": "byName",
              "options": "Value #memory_requested"
            },
            "properties": [
              {
                "id": "unit",
                "value": "decgbytes"
              },
              {
                "id": "decimals",
                "value": 1
              }
            ]
          },
          {
            "matcher": {
              "id": "byName",
              "options": "Value #storage_requested"
            },
            "properties": [
              {
                "id": "unit",
                "value": "decgbytes"
              },
              {
                "id": "decimals"
              }
            ]
          },
          {
            "matcher": {
              "id": "byName",
              "options": "Memory Cost"
            },
            "properties": [
              {
                "id": "unit",
                "value": "currencyUSD"
              }
            ]
          },
          {
            "matcher": {
              "id": "byName",
              "options": "Value #storage_requested_baremetal"
            },
            "properties": [
              {
                "id": "unit",
                "value": "percent"
              }
            ]
          },
          {
            "matcher": {
              "id": "byName",
              "options": "Value #storage_requested_baremetal"
            },
            "properties": [
              {
                "id": "unit",
                "value": "decgbytes"
              }
            ]
          },
          {
            "matcher": {
              "id": "byName",
              "options": "Value #memory_requested_bare_metal"
            },
            "properties": [
              {
                "id": "unit",
                "value": "decgbytes"
              }
            ]
          }
        ]
      },
      "gridPos": {
        "h": 20,
        "w": 24,
        "x": 0,
        "y": 0
      },
      "id": 73,
      "maxDataPoints": 800,
      "options": {
        "cellHeight": "sm",
        "footer": {
          "countRows": false,
          "fields": "",
          "reducer": [
            "sum"
          ],
          "show": true
        },
        "showHeader": true,
        "sortBy": [
          {
            "desc": false,
            "displayName": "Namespace"
          }
        ]
      },
      "pluginVersion": "11.5.2",
      "targets": [
        {
          "datasource": {
            "type": "prometheus",
            "uid": "${datasource}"
          },
          "editorMode": "code",
          "exemplar": false,
          "expr": "# CPU Requested (we consider price for cpu equal between bare metal and public cloud)\nkube_namespace_labels{label_project=~\"$project\", label_product=~\"$product\", label_environment_kind=~\"$kind\", cluster=\"$cluster\", namespace=~\"$namespace\"} * on (namespace) group_right(label_environment_kind, label_product, label_project, label_client) (\n    avg_over_time(\n        namespace_cpu:kube_pod_container_resource_requests:sum{cluster=\"$cluster\", namespace=~\"$namespace\"}[$__range:$__interval]\n    )\n    or sum by (cluster, namespace, prometheus, prometheus_replica) (kube_namespace_labels{cluster=\"$cluster\", namespace=~\"$namespace\"} * 0)\n)",
          "format": "table",
          "hide": false,
          "instant": true,
          "interval": "",
          "intervalFactor": 1,
          "legendFormat": "__auto",
          "refId": "cpu_requested"
        },
        {
          "datasource": {
            "type": "prometheus",
            "uid": "${datasource}"
          },
          "editorMode": "code",
          "exemplar": true,
          "expr": "# RAM Requested, public cloud\nkube_namespace_labels{label_project=~\"$project\", label_product=~\"$product\", label_environment_kind=~\"$kind\", cluster=\"$cluster\", namespace=~\"$namespace\"} * on (namespace) group_right(label_environment_kind, label_product, label_project, label_client) (\n    avg_over_time(namespace_memory:kube_pod_container_resource_requests_not_bare_metal:sum{cluster=\"$cluster\", namespace=~\"$namespace\"}[$__range:$__interval]) / (1024 * 1024 * 1024)\n    or sum by (cluster, namespace, prometheus, prometheus_replica) (kube_namespace_labels{cluster=\"$cluster\", namespace=~\"$namespace\"} * 0)\n)",
          "format": "table",
          "hide": false,
          "instant": true,
          "interval": "",
          "intervalFactor": 1,
          "legendFormat": "__auto",
          "refId": "memory_requested"
        },
        {
          "datasource": {
            "type": "prometheus",
            "uid": "${datasource}"
          },
          "editorMode": "code",
          "exemplar": false,
          "expr": "# RAM Requested, bare metal\nkube_namespace_labels{label_project=~\"$project\", label_product=~\"$product\", label_environment_kind=~\"$kind\", cluster=\"$cluster\", namespace=~\"$namespace\"} * on (namespace) group_right(label_environment_kind, label_product, label_project, label_client) (\n   avg_over_time(namespace_memory:kube_pod_container_resource_requests_bare_metal:sum{cluster=\"$cluster\", namespace=~\"$namespace\"}[$__range:$__interval]) / (1024 * 1024 * 1024)\n   or sum by (cluster, namespace, prometheus, prometheus_replica) (kube_namespace_labels{cluster=\"$cluster\", namespace=~\"$namespace\"} * 0)\n)",
          "format": "table",
          "hide": false,
          "instant": true,
          "legendFormat": "__auto",
          "range": false,
          "refId": "memory_requested_bare_metal"
        },
        {
          "datasource": {
            "type": "prometheus",
            "uid": "${datasource}"
          },
          "editorMode": "code",
          "exemplar": true,
          "expr": "# Storage Requested\nkube_namespace_labels{label_project=~\"$project\", label_product=~\"$product\", label_environment_kind=~\"$kind\", cluster=\"$cluster\", namespace=~\"$namespace\"} * on (namespace) group_right(label_environment_kind, label_product, label_project, label_client) (\n  avg_over_time(\n    sum without (storageclass) (\n      namespace_persistentvolumeclaim:kube_persistentvolumeclaim_storageclass_resource_requests_storage_bytes:sum{cluster=\"$cluster\", namespace=~\"$namespace\", storageclass!~\"csi-topolvm-standard-.*\"}\n    )[$__range:$__interval]\n  ) / 1024^3\n  or sum by (cluster, namespace, prometheus, prometheus_replica) (kube_namespace_labels{cluster=\"$cluster\", namespace=~\"$namespace\"} * 0) # Allow to list even namespaces without PVC\n)",
          "format": "table",
          "hide": false,
          "instant": true,
          "interval": "",
          "intervalFactor": 1,
          "legendFormat": "__auto",
          "refId": "storage_requested"
        },
        {
          "datasource": {
            "type": "prometheus",
            "uid": "${datasource}"
          },
          "editorMode": "code",
          "exemplar": false,
          "expr": "# Storage Requested, bare metal\nkube_namespace_labels{label_project=~\"$project\", label_product=~\"$product\", label_environment_kind=~\"$kind\", cluster=\"$cluster\", namespace=~\"$namespace\"} * on (namespace) group_right(label_environment_kind, label_product, label_project, label_client) (\n  avg_over_time(\n    sum without (storageclass) (\n      namespace_persistentvolumeclaim:kube_persistentvolumeclaim_storageclass_resource_requests_storage_bytes:sum{cluster=\"$cluster\", namespace=~\"$namespace\", storageclass=~\"csi-topolvm-standard-.*\"}\n    )[$__range:$__interval]\n  ) / 1024^3\n  or sum by (cluster, namespace, prometheus, prometheus_replica) (kube_namespace_labels{cluster=\"$cluster\", namespace=~\"$namespace\"} * 0) # Allow to list even namespaces without PVC\n)",
          "format": "table",
          "hide": false,
          "instant": true,
          "legendFormat": "__auto",
          "range": false,
          "refId": "storage_requested_baremetal"
        }
      ],
      "title": "Namespace cost and utilisation analysis over the period",
      "transformations": [
        {
          "id": "merge",
          "options": {
            "reducers": []
          }
        },
        {
          "id": "calculateField",
          "options": {
            "alias": "CPU Cost",
            "binary": {
              "left": {
                "matcher": {
                  "id": "byName",
                  "options": "Value #cpu_requested"
                }
              },
              "operator": "*",
              "right": {
                "fixed": "7"
              }
            },
            "mode": "binary",
            "reduce": {
              "reducer": "sum"
            },
            "replaceFields": false
          }
        },
        {
          "id": "calculateField",
          "options": {
            "alias": "Memory Cost Public Cloud",
            "binary": {
              "left": {
                "matcher": {
                  "id": "byName",
                  "options": "Value #memory_requested"
                }
              },
              "operator": "*",
              "right": {
                "fixed": "2.5"
              }
            },
            "mode": "binary",
            "reduce": {
              "reducer": "sum"
            }
          }
        },
        {
          "id": "calculateField",
          "options": {
            "alias": "Memory Cost Bare Metal",
            "binary": {
              "left": {
                "matcher": {
                  "id": "byName",
                  "options": "Value #memory_requested_bare_metal"
                }
              },
              "right": {
                "fixed": "0.4"
              }
            },
            "mode": "binary",
            "reduce": {
              "reducer": "sum"
            }
          }
        },
        {
          "id": "calculateField",
          "options": {
            "alias": "Memory Cost",
            "binary": {
              "left": {
                "matcher": {
                  "id": "byName",
                  "options": "Value #memory_requested"
                }
              },
              "right": {
                "matcher": {
                  "id": "byName",
                  "options": "Value #memory_requested_bare_metal"
                }
              }
            },
            "mode": "binary",
            "reduce": {
              "reducer": "sum"
            }
          }
        },
        {
          "id": "calculateField",
          "options": {
            "alias": "Storage Cost, Public Cloud",
            "binary": {
              "left": {
                "matcher": {
                  "id": "byName",
                  "options": "Value #storage_requested"
                }
              },
              "operator": "*",
              "right": {
                "fixed": "0.12"
              }
            },
            "mode": "binary",
            "reduce": {
              "reducer": "sum"
            }
          }
        },
        {
          "id": "calculateField",
          "options": {
            "alias": "Storage Cost, bare metal",
            "binary": {
              "left": {
                "matcher": {
                  "id": "byName",
                  "options": "Value #storage_requested_baremetal"
                }
              },
              "operator": "*",
              "right": {
                "fixed": "0.025"
              }
            },
            "mode": "binary",
            "reduce": {
              "include": [],
              "reducer": "sum"
            }
          }
        },
        {
          "id": "calculateField",
          "options": {
            "alias": "Storage Cost",
            "binary": {
              "left": {
                "matcher": {
                  "id": "byName",
                  "options": "Storage Cost, Public Cloud"
                }
              },
              "right": {
                "matcher": {
                  "id": "byName",
                  "options": "Storage Cost, bare metal"
                }
              }
            },
            "mode": "binary",
            "reduce": {
              "reducer": "sum"
            }
          }
        },
        {
          "id": "calculateField",
          "options": {
            "binary": {
              "left": {
                "matcher": {
                  "id": "byName",
                  "options": "CPU Cost"
                }
              },
              "operator": "+",
              "right": {
                "matcher": {
                  "id": "byName",
                  "options": "Memory Cost"
                }
              }
            },
            "mode": "binary",
            "reduce": {
              "reducer": "sum"
            }
          }
        },
        {
          "id": "calculateField",
          "options": {
            "alias": "Total Cost",
            "binary": {
              "left": {
                "matcher": {
                  "id": "byName",
                  "options": "CPU Cost + Memory Cost"
                }
              },
              "operator": "+",
              "right": {
                "matcher": {
                  "id": "byName",
                  "options": "Storage Cost"
                }
              }
            },
            "mode": "binary",
            "reduce": {
              "reducer": "sum"
            }
          }
        },
        {
          "id": "organize",
          "options": {
            "excludeByName": {
              "CPU Cost + Memory Cost": true,
              "Memory Cost Bare Metal": true,
              "Memory Cost Public Cloud": true,
              "Storage Cost, Public Cloud": true,
              "Storage Cost, bare metal": true,
              "Time": true,
              "Value #storage_requested_baremetal": false,
              "cluster": false,
              "prometheus": true,
              "prometheus_replica": true
            },
            "includeByName": {},
            "indexByName": {
              "CPU Cost": 13,
              "CPU Cost + Memory Cost": 17,
              "Memory Cost": 16,
              "Memory Cost Bare Metal": 14,
              "Memory Cost Public Cloud": 15,
              "Storage Cost": 20,
              "Storage Cost, Public Cloud": 18,
              "Storage Cost, bare metal": 19,
              "Time": 0,
              "Total Cost": 7,
              "Value #cpu_requested": 8,
              "Value #memory_requested": 9,
              "Value #memory_requested_bare_metal": 10,
              "Value #storage_requested": 11,
              "Value #storage_requested_baremetal": 12,
              "cluster": 6,
              "label_client": 4,
              "label_environment_kind": 5,
              "label_product": 2,
              "label_project": 3,
              "namespace": 1,
              "prometheus": 21
            },
            "renameByName": {
              "CPU Cost + Memory Cost": "",
              "Value #cpu_requested": "Requested CPU",
              "Value #memory_requested": "Requested RAM",
              "Value #memory_requested_bare_metal": "Request RAM, bare metal",
              "Value #storage_requested": "Requested Storage",
              "Value #storage_requested_baremetal": "Requested storage, bare metal",
              "cluster": "Cluster",
              "label_client": "Client",
              "label_environment_kind": "Environment Kind",
              "label_product": "Product",
              "label_project": "Project",
              "namespace": "Namespace"
            }
          }
        },
        {
          "id": "filterByValue",
          "options": {
            "filters": [
              {
                "config": {
                  "id": "lower",
                  "options": {
                    "value": 5
                  }
                },
                "fieldName": "Total Cost"
              }
            ],
            "match": "any",
            "type": "exclude"
          }
        }
      ],
      "type": "table"
    },
    {
      "collapsed": false,
      "gridPos": {
        "h": 1,
        "w": 24,
        "x": 0,
        "y": 20
      },
      "id": 75,
      "panels": [],
      "title": "Cost Evolution",
      "type": "row"
    },
    {
      "datasource": {
        "type": "prometheus",
        "uid": "${datasource}"
      },
      "fieldConfig": {
        "defaults": {
          "color": {
            "mode": "thresholds"
          },
          "custom": {
            "align": "auto",
            "cellOptions": {
              "type": "auto"
            },
            "filterable": true,
            "inspect": false
          },
          "decimals": 0,
          "mappings": [],
          "thresholds": {
            "mode": "absolute",
            "steps": [
              {
                "color": "green",
                "value": null
              },
              {
                "color": "green",
                "value": -1000
              },
              {
                "color": "#6ED0E0",
                "value": -100
              },
              {
                "color": "green",
                "value": 0
              },
              {
                "color": "#EAB839",
                "value": 10
              },
              {
                "color": "orange",
                "value": 100
              },
              {
                "color": "red",
                "value": 1000
              }
            ]
          },
          "unit": "none"
        },
        "overrides": [
          {
            "matcher": {
              "id": "byName",
              "options": "namespace"
            },
            "properties": [
              {
                "id": "displayName",
                "value": "Namespace"
              },
              {
                "id": "links",
                "value": [
                  {
                    "targetBlank": false,
                    "title": "View namespace cost analysis",
                    "url": "d/at-cost-analysis-namespace/cost-analysis-by-namespace?&var-namespace=$__cell"
                  }
                ]
              },
              {
                "id": "custom.minWidth",
                "value": 180
              }
            ]
          },
          {
            "matcher": {
              "id": "byName",
              "options": "Value #cpu_requested"
            },
            "properties": [
              {
                "id": "unit",
                "value": "short"
              },
              {
                "id": "decimals",
                "value": 1
              }
            ]
          },
          {
            "matcher": {
              "id": "byName",
              "options": "Value #memory_requested"
            },
            "properties": [
              {
                "id": "unit",
                "value": "decgbytes"
              },
              {
                "id": "decimals",
                "value": 1
              }
            ]
          },
          {
            "matcher": {
              "id": "byName",
              "options": "Value #storage_requested"
            },
            "properties": [
              {
                "id": "unit",
                "value": "decgbytes"
              },
              {
                "id": "decimals"
              }
            ]
          },
          {
            "matcher": {
              "id": "byName",
              "options": "Memory Cost"
            },
            "properties": [
              {
                "id": "unit",
                "value": "currencyUSD"
              }
            ]
          },
          {
            "matcher": {
              "id": "byName",
              "options": "Value #storage_requested_baremetal"
            },
            "properties": [
              {
                "id": "unit",
                "value": "percent"
              }
            ]
          },
          {
            "matcher": {
              "id": "byName",
              "options": "Value #storage_requested_baremetal"
            },
            "properties": [
              {
                "id": "unit",
                "value": "decgbytes"
              }
            ]
          },
          {
            "matcher": {
              "id": "byName",
              "options": "Value #memory_requested_bare_metal"
            },
            "properties": [
              {
                "id": "unit",
                "value": "decgbytes"
              }
            ]
          },
          {
            "matcher": {
              "id": "byName",
              "options": "Cost increase"
            },
            "properties": [
              {
                "id": "custom.cellOptions",
                "value": {
                  "type": "color-text"
                }
              }
            ]
          }
        ]
      },
      "gridPos": {
        "h": 25,
        "w": 24,
        "x": 0,
        "y": 21
      },
      "id": 74,
      "maxDataPoints": 800,
      "options": {
        "cellHeight": "sm",
        "footer": {
          "countRows": false,
          "fields": "",
          "reducer": [
            "sum"
          ],
          "show": true
        },
        "showHeader": true,
        "sortBy": [
          {
            "desc": true,
            "displayName": "Cost increase"
          }
        ]
      },
      "pluginVersion": "11.5.2",
      "targets": [
        {
          "datasource": {
            "type": "prometheus",
            "uid": "${datasource}"
          },
          "editorMode": "code",
          "exemplar": false,
          "expr": "# CPU Requested (we consider price for cpu equal between bare metal and public cloud)\nkube_namespace_labels{label_project=~\"$project\", label_product=~\"$product\", label_environment_kind=~\"$kind\", cluster=\"$cluster\", namespace=~\"$namespace\"} * on (namespace) group_right(label_environment_kind, label_product, label_project, label_client) (\n    avg_over_time(\n        namespace_cpu:kube_pod_container_resource_requests:sum{cluster=\"$cluster\", namespace=~\"$namespace\"}[$__range:$__interval]\n    )\n    or sum by (cluster, namespace, prometheus, prometheus_replica) (kube_namespace_labels{cluster=\"$cluster\", namespace=~\"$namespace\"} * 0)\n)\n\n- on (cluster, namespace, label_product, label_project, label_client, label_environment_kind)\n\nkube_namespace_labels{label_project=~\"$project\", label_product=~\"$product\", label_environment_kind=~\"$kind\", cluster=\"$cluster\", namespace=~\"$namespace\"} * on (namespace) group_right(label_environment_kind, label_product, label_project, label_client) (\n    avg_over_time(\n        namespace_cpu:kube_pod_container_resource_requests:sum{cluster=\"$cluster\", namespace=~\"$namespace\"}[$__range:$__interval] offset 30d\n    )\n    or sum by (cluster, namespace, prometheus, prometheus_replica) (kube_namespace_labels{cluster=\"$cluster\", namespace=~\"$namespace\"} * 0)\n)",
          "format": "table",
          "hide": false,
          "instant": true,
          "interval": "",
          "intervalFactor": 1,
          "legendFormat": "__auto",
          "refId": "cpu_requested"
        },
        {
          "datasource": {
            "type": "prometheus",
            "uid": "${datasource}"
          },
          "editorMode": "code",
          "exemplar": true,
          "expr": "# RAM Requested, public cloud\nkube_namespace_labels{label_project=~\"$project\", label_product=~\"$product\", label_environment_kind=~\"$kind\", cluster=\"$cluster\", namespace=~\"$namespace\"} * on (namespace) group_right(label_environment_kind, label_product, label_project, label_client) (\n    avg_over_time(namespace_memory:kube_pod_container_resource_requests_not_bare_metal:sum{cluster=\"$cluster\", namespace=~\"$namespace\"}[$__range:$__interval]) / (1024 * 1024 * 1024)\n    or sum by (cluster, namespace, prometheus, prometheus_replica) (kube_namespace_labels{cluster=\"$cluster\", namespace=~\"$namespace\"} * 0)\n)\n\n- on (cluster, namespace, label_product, label_project, label_client, label_environment_kind)\n\nkube_namespace_labels{label_project=~\"$project\", label_product=~\"$product\", label_environment_kind=~\"$kind\", cluster=\"$cluster\", namespace=~\"$namespace\"} * on (namespace) group_right(label_environment_kind, label_product, label_project, label_client) (\n    avg_over_time(namespace_memory:kube_pod_container_resource_requests_not_bare_metal:sum{cluster=\"$cluster\", namespace=~\"$namespace\"}[$__range:$__interval] offset 30d) / (1024 * 1024 * 1024)\n    or sum by (cluster, namespace, prometheus, prometheus_replica) (kube_namespace_labels{cluster=\"$cluster\", namespace=~\"$namespace\"} * 0)\n)",
          "format": "table",
          "hide": false,
          "instant": true,
          "interval": "",
          "intervalFactor": 1,
          "legendFormat": "__auto",
          "refId": "memory_requested"
        },
        {
          "datasource": {
            "type": "prometheus",
            "uid": "${datasource}"
          },
          "editorMode": "code",
          "exemplar": false,
          "expr": "# RAM Requested, bare metal\nkube_namespace_labels{label_project=~\"$project\", label_product=~\"$product\", label_environment_kind=~\"$kind\", cluster=\"$cluster\", namespace=~\"$namespace\"} * on (namespace) group_right(label_environment_kind, label_product, label_project, label_client) (\n   avg_over_time(namespace_memory:kube_pod_container_resource_requests_bare_metal:sum{cluster=\"$cluster\", namespace=~\"$namespace\"}[$__range:$__interval]) / (1024 * 1024 * 1024)\n   or sum by (cluster, namespace, prometheus, prometheus_replica) (kube_namespace_labels{cluster=\"$cluster\", namespace=~\"$namespace\"} * 0)\n)\n\n- on (cluster, namespace, label_product, label_project, label_client, label_environment_kind)\n\nkube_namespace_labels{label_project=~\"$project\", label_product=~\"$product\", label_environment_kind=~\"$kind\", cluster=\"$cluster\", namespace=~\"$namespace\"} * on (namespace) group_right(label_environment_kind, label_product, label_project, label_client) (\n   avg_over_time(namespace_memory:kube_pod_container_resource_requests_bare_metal:sum{cluster=\"$cluster\", namespace=~\"$namespace\"}[$__range:$__interval] offset 30d) / (1024 * 1024 * 1024)\n   or sum by (cluster, namespace, prometheus, prometheus_replica) (kube_namespace_labels{cluster=\"$cluster\", namespace=~\"$namespace\"} * 0)\n)",
          "format": "table",
          "hide": false,
          "instant": true,
          "legendFormat": "__auto",
          "range": false,
          "refId": "memory_requested_bare_metal"
        },
        {
          "datasource": {
            "type": "prometheus",
            "uid": "${datasource}"
          },
          "editorMode": "code",
          "exemplar": true,
          "expr": "# Storage Requested\nkube_namespace_labels{label_project=~\"$project\", label_product=~\"$product\", label_environment_kind=~\"$kind\", cluster=\"$cluster\", namespace=~\"$namespace\"} * on (namespace) group_right(label_environment_kind, label_product, label_project, label_client) (\n  avg_over_time(\n    sum without (storageclass) (\n      namespace_persistentvolumeclaim:kube_persistentvolumeclaim_storageclass_resource_requests_storage_bytes:sum{cluster=\"$cluster\", namespace=~\"$namespace\", storageclass!~\"csi-topolvm-standard-.*\"}\n    )[$__range:$__interval]\n  ) / 1024^3\n  or sum by (cluster, namespace, prometheus, prometheus_replica) (kube_namespace_labels{cluster=\"$cluster\", namespace=~\"$namespace\"} * 0) # Allow to list even namespaces without PVC\n)\n\n- on (cluster, namespace, label_product, label_project, label_client, label_environment_kind)\n\nkube_namespace_labels{label_project=~\"$project\", label_product=~\"$product\", label_environment_kind=~\"$kind\", cluster=\"$cluster\", namespace=~\"$namespace\"} * on (namespace) group_right(label_environment_kind, label_product, label_project, label_client) (\n  avg_over_time(\n    sum without (storageclass) (\n      namespace_persistentvolumeclaim:kube_persistentvolumeclaim_storageclass_resource_requests_storage_bytes:sum{cluster=\"$cluster\", namespace=~\"$namespace\", storageclass!~\"csi-topolvm-standard-.*\"}\n    )[$__range:$__interval]  offset 30d\n  ) / 1024^3\n  or sum by (cluster, namespace, prometheus, prometheus_replica) (kube_namespace_labels{cluster=\"$cluster\", namespace=~\"$namespace\"} * 0) # Allow to list even namespaces without PVC\n)",
          "format": "table",
          "hide": false,
          "instant": true,
          "interval": "",
          "intervalFactor": 1,
          "legendFormat": "__auto",
          "refId": "storage_requested"
        },
        {
          "datasource": {
            "type": "prometheus",
            "uid": "${datasource}"
          },
          "editorMode": "code",
          "exemplar": false,
          "expr": "# Storage Requested, bare metal\nkube_namespace_labels{label_project=~\"$project\", label_product=~\"$product\", label_environment_kind=~\"$kind\", cluster=\"$cluster\", namespace=~\"$namespace\"} * on (namespace) group_right(label_environment_kind, label_product, label_project, label_client) (\n  avg_over_time(\n    sum without (storageclass) (\n      namespace_persistentvolumeclaim:kube_persistentvolumeclaim_storageclass_resource_requests_storage_bytes:sum{cluster=\"$cluster\", namespace=~\"$namespace\", storageclass=~\"csi-topolvm-standard-.*\"}\n    )[$__range:$__interval]\n  ) / 1024^3\n  or sum by (cluster, namespace, prometheus, prometheus_replica) (kube_namespace_labels{cluster=\"$cluster\", namespace=~\"$namespace\"} * 0) # Allow to list even namespaces without PVC\n)\n\n- on (cluster, namespace, label_product, label_project, label_client, label_environment_kind)\n\nkube_namespace_labels{label_project=~\"$project\", label_product=~\"$product\", label_environment_kind=~\"$kind\", cluster=\"$cluster\", namespace=~\"$namespace\"} * on (namespace) group_right(label_environment_kind, label_product, label_project, label_client) (\n  avg_over_time(\n    sum without (storageclass) (\n      namespace_persistentvolumeclaim:kube_persistentvolumeclaim_storageclass_resource_requests_storage_bytes:sum{cluster=\"$cluster\", namespace=~\"$namespace\", storageclass=~\"csi-topolvm-standard-.*\"}\n    )[$__range:$__interval] offset 30d\n  ) / 1024^3\n  or sum by (cluster, namespace, prometheus, prometheus_replica) (kube_namespace_labels{cluster=\"$cluster\", namespace=~\"$namespace\"} * 0) # Allow to list even namespaces without PVC\n)",
          "format": "table",
          "hide": false,
          "instant": true,
          "legendFormat": "__auto",
          "range": false,
          "refId": "storage_requested_baremetal"
        }
      ],
      "title": "Namespace Cost Evolution compared to previous month",
      "transformations": [
        {
          "id": "merge",
          "options": {
            "reducers": []
          }
        },
        {
          "id": "calculateField",
          "options": {
            "alias": "CPU Cost",
            "binary": {
              "left": {
                "matcher": {
                  "id": "byName",
                  "options": "Value #cpu_requested"
                }
              },
              "operator": "*",
              "right": {
                "fixed": "7"
              }
            },
            "mode": "binary",
            "reduce": {
              "reducer": "sum"
            },
            "replaceFields": false
          }
        },
        {
          "id": "calculateField",
          "options": {
            "alias": "Memory Cost Public Cloud",
            "binary": {
              "left": {
                "matcher": {
                  "id": "byName",
                  "options": "Value #memory_requested"
                }
              },
              "operator": "*",
              "right": {
                "fixed": "2.5"
              }
            },
            "mode": "binary",
            "reduce": {
              "reducer": "sum"
            }
          }
        },
        {
          "id": "calculateField",
          "options": {
            "alias": "Memory Cost Bare Metal",
            "binary": {
              "left": {
                "matcher": {
                  "id": "byName",
                  "options": "Value #memory_requested_bare_metal"
                }
              },
              "right": {
                "fixed": "0.4"
              }
            },
            "mode": "binary",
            "reduce": {
              "reducer": "sum"
            }
          }
        },
        {
          "id": "calculateField",
          "options": {
            "alias": "Memory Cost",
            "binary": {
              "left": {
                "matcher": {
                  "id": "byName",
                  "options": "Value #memory_requested"
                }
              },
              "right": {
                "matcher": {
                  "id": "byName",
                  "options": "Value #memory_requested_bare_metal"
                }
              }
            },
            "mode": "binary",
            "reduce": {
              "reducer": "sum"
            }
          }
        },
        {
          "id": "calculateField",
          "options": {
            "alias": "Storage Cost, Public Cloud",
            "binary": {
              "left": {
                "matcher": {
                  "id": "byName",
                  "options": "Value #storage_requested"
                }
              },
              "operator": "*",
              "right": {
                "fixed": "0.12"
              }
            },
            "mode": "binary",
            "reduce": {
              "reducer": "sum"
            }
          }
        },
        {
          "id": "calculateField",
          "options": {
            "alias": "Storage Cost, bare metal",
            "binary": {
              "left": {
                "matcher": {
                  "id": "byName",
                  "options": "Value #storage_requested_baremetal"
                }
              },
              "operator": "*",
              "right": {
                "fixed": "0.025"
              }
            },
            "mode": "binary",
            "reduce": {
              "include": [],
              "reducer": "sum"
            }
          }
        },
        {
          "id": "calculateField",
          "options": {
            "alias": "Storage Cost",
            "binary": {
              "left": {
                "matcher": {
                  "id": "byName",
                  "options": "Storage Cost, Public Cloud"
                }
              },
              "right": {
                "matcher": {
                  "id": "byName",
                  "options": "Storage Cost, bare metal"
                }
              }
            },
            "mode": "binary",
            "reduce": {
              "reducer": "sum"
            }
          }
        },
        {
          "id": "calculateField",
          "options": {
            "binary": {
              "left": {
                "matcher": {
                  "id": "byName",
                  "options": "CPU Cost"
                }
              },
              "operator": "+",
              "right": {
                "matcher": {
                  "id": "byName",
                  "options": "Memory Cost"
                }
              }
            },
            "mode": "binary",
            "reduce": {
              "reducer": "sum"
            }
          }
        },
        {
          "id": "calculateField",
          "options": {
            "alias": "Total Cost",
            "binary": {
              "left": {
                "matcher": {
                  "id": "byName",
                  "options": "CPU Cost + Memory Cost"
                }
              },
              "operator": "+",
              "right": {
                "matcher": {
                  "id": "byName",
                  "options": "Storage Cost"
                }
              }
            },
            "mode": "binary",
            "reduce": {
              "reducer": "sum"
            }
          }
        },
        {
          "id": "organize",
          "options": {
            "excludeByName": {
              "CPU Cost + Memory Cost": true,
              "Memory Cost Bare Metal": true,
              "Memory Cost Public Cloud": true,
              "Storage Cost, Public Cloud": true,
              "Storage Cost, bare metal": true,
              "Time": true,
              "Value #storage_requested_baremetal": false,
              "cluster": false,
              "prometheus": true,
              "prometheus_replica": true
            },
            "includeByName": {},
            "indexByName": {
              "CPU Cost": 13,
              "CPU Cost + Memory Cost": 17,
              "Memory Cost": 16,
              "Memory Cost Bare Metal": 14,
              "Memory Cost Public Cloud": 15,
              "Storage Cost": 20,
              "Storage Cost, Public Cloud": 18,
              "Storage Cost, bare metal": 19,
              "Time": 0,
              "Total Cost": 7,
              "Value #cpu_requested": 8,
              "Value #memory_requested": 9,
              "Value #memory_requested_bare_metal": 10,
              "Value #storage_requested": 11,
              "Value #storage_requested_baremetal": 12,
              "cluster": 6,
              "label_client": 4,
              "label_environment_kind": 5,
              "label_product": 2,
              "label_project": 3,
              "namespace": 1,
              "prometheus": 21
            },
            "renameByName": {
              "CPU Cost + Memory Cost": "",
              "Total Cost": "Cost increase",
              "Value #cpu_requested": "Requested CPU",
              "Value #memory_requested": "Requested RAM",
              "Value #memory_requested_bare_metal": "Request RAM, bare metal",
              "Value #storage_requested": "Requested Storage",
              "Value #storage_requested_baremetal": "Requested storage, bare metal",
              "cluster": "Cluster",
              "label_client": "Client",
              "label_environment_kind": "Environment Kind",
              "label_product": "Product",
              "label_project": "Project",
              "namespace": "Namespace"
            }
          }
        },
        {
          "id": "filterByValue",
          "options": {
            "filters": [
              {
                "config": {
                  "id": "lower",
                  "options": {
                    "value": 5
                  }
                },
                "fieldName": "Total Cost"
              }
            ],
            "match": "any",
            "type": "exclude"
          }
        }
      ],
      "type": "table"
    }
  ],
  "refresh": "",
  "schemaVersion": 40,
  "tags": [],
  "templating": {
    "list": [
      {
        "current": {},
        "includeAll": false,
        "name": "datasource",
        "options": [],
        "query": "prometheus",
        "refresh": 1,
        "regex": "",
        "type": "datasource"
      },
      {
        "current": {},
        "datasource": {
          "type": "prometheus",
          "uid": "${datasource}"
        },
        "definition": "label_values(up{job=\"kube-state-metrics\"}, cluster)",
        "includeAll": false,
        "label": "Cluster",
        "name": "cluster",
        "options": [],
        "query": {
          "query": "label_values(up{job=\"kube-state-metrics\"}, cluster)",
          "refId": "StandardVariableQuery"
        },
        "refresh": 2,
        "regex": "",
        "type": "query"
      },
      {
        "allValue": ".*",
        "allowCustomValue": false,
        "current": {},
        "datasource": {
          "type": "prometheus",
          "uid": "${datasource}"
        },
        "definition": "label_values(kube_namespace_labels,label_product)",
        "includeAll": true,
        "label": "Product",
        "name": "product",
        "options": [],
        "query": {
          "qryType": 1,
          "query": "label_values(kube_namespace_labels,label_product)",
          "refId": "PrometheusVariableQueryEditor-VariableQuery"
        },
        "refresh": 1,
        "regex": "",
        "type": "query"
      },
      {
        "current": {},
        "definition": "label_values(kube_namespace_labels,label_project)",
        "includeAll": true,
        "label": "Project",
        "name": "project",
        "options": [],
        "query": {
          "query": "label_values(kube_namespace_labels,label_project)",
          "refId": "PrometheusVariableQueryEditor-VariableQuery"
        },
        "refresh": 1,
        "regex": "",
        "sort": 1,
        "type": "query"
      },
      {
        "allValue": ".*",
        "allowCustomValue": true,
        "current": {},
        "datasource": {
          "type": "prometheus",
          "uid": "${datasource}"
        },
        "definition": "label_values(kube_namespace_labels,label_environment_kind)",
        "includeAll": true,
        "label": "Environment Kind",
        "name": "kind",
        "options": [],
        "query": {
          "qryType": 1,
          "query": "label_values(kube_namespace_labels,label_environment_kind)",
          "refId": "PrometheusVariableQueryEditor-VariableQuery"
        },
        "refresh": 1,
        "regex": "",
        "type": "query"
      },
      {
        "current": {
          "text": ".*",
          "value": ".*"
        },
        "description": "Namespace",
        "label": "Namespace",
        "name": "namespace",
        "options": [
          {
            "selected": true,
            "text": ".*",
            "value": ".*"
          }
        ],
        "query": ".*",
        "type": "textbox"
      }
    ]
  },
  "time": {
    "from": "now-1M/M",
    "to": "now-1M/M"
  },
  "timepicker": {
    "refresh_intervals": []
  },
  "timezone": "browser",
  "title": "FinOps: Cost Analysis by Cluster",
  "uid": "cost-analysis-by-cluster",
  "version": 27,
  "weekStart": ""
}
